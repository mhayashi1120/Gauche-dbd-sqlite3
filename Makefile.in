# General info
SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
datadir     = @datadir@
datarootdir = @datarootdir@
srcdir      = @srcdir@
VPATH       = $(srcdir)

# These may be overridden by make invocators
DESTDIR        =
GOSH           = "@GOSH@"
GAUCHE_CONFIG  = "@GAUCHE_CONFIG@"
GAUCHE_PACKAGE = "@GAUCHE_PACKAGE@"
INSTALL        = "@GAUCHE_INSTALL@" -C

# Other parameters
SOEXT  = @SOEXT@
OBJEXT = @OBJEXT@
EXEEXT = @EXEEXT@
LOCAL_PATHS = "@LOCAL_PATHS@"
DSOEXT = @SOEXT@

# Module-specific stuff
PACKAGE   = gauche-dbd-sqlite3

ARCHFILES = $(MODULE).$(DSOEXT)
SCMFILES  = dbd/sqlite3.scm
HEADERS   =

TARGET    = $(ARCHFILES)
GENERATED =
CONFIG_GENERATED = Makefile config.cache config.log config.status \
		   configure.lineno autom4te*.cache $(PACKAGE).gpd

GAUCHE_PKGINCDIR  = "$(DESTDIR)@GAUCHE_PKGINCDIR@"
GAUCHE_PKGLIBDIR  = "$(DESTDIR)@GAUCHE_PKGLIBDIR@"
GAUCHE_PKGARCHDIR = "$(DESTDIR)@GAUCHE_PKGARCHDIR@"

sqlite3_SRCS = dbd_sqlite3.c dbd_sqlite3lib.stub
sqlite3_HEADERS = gauche_dbd_sqlite3.h

LIBS     = @LIBS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS  = @LDFLAGS@
MODULE   = dbd_sqlite3

all : $(TARGET)

$(MODULE).$(DSOEXT): $(sqlite3_SRCS) $(sqlite3_HEADERS)
	$(GAUCHE_PACKAGE) compile \
	--cppflags=$(CPPFLAGS) --ldflags=$(LDFLAGS) \
	--libs="$(LIBS)" --verbose $(MODULE) $(sqlite3_SRCS)

check : all
	@rm -f test.log
	$(GOSH) -I. test.scm > test.log

early-check : check
	@rm -f test2.log
	$(GOSH) -I. test2.scm >> test2.log

install : all
	$(INSTALL) -m 444 -T $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR) $(SCMFILES)
	$(INSTALL) -m 555 -T $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -m 444 -T $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

uninstall :
	$(INSTALL) -U $(GAUCHE_PKGINCDIR) $(HEADERS)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR) $(SCMFILES)
	$(INSTALL) -U $(GAUCHE_PKGARCHDIR) $(ARCHFILES)
	$(INSTALL) -U $(GAUCHE_PKGLIBDIR)/.packages $(PACKAGE).gpd

clean :
	$(GAUCHE_PACKAGE) compile --clean $(MODULE) $(sqlite3_SRCS)
	rm -rf $(TARGET) $(GENERATED) *~ test.log so_locations

distclean : clean
	rm -rf $(CONFIG_GENERATED)

maintainer-clean : clean
	rm -rf $(CONFIG_GENERATED) configure VERSION

