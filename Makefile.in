SHELL       = @SHELL@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
libdir      = @libdir@
VPATH       = $(srcdir)

# These may be overridden by make invocators
DESTDIR  =
OPTFLAGS = @OPTFLAGS@
CC       = @CC@
LIBS     = @LIBS@
CFLAGS   = @CFLAGS@ 
LDFLAGS  = @LDFLAGS@
INSTALL_TYPE = @INSTALL_TYPE@

# Set by configure
GOSH     = @GOSH@
GAUCHE_CONFIG = @GAUCHE_CONFIG@
GAUCHE_PACKAGE = @GAUCHE_PACKAGE@
OBJEXT   = @OBJEXT@
DSOEXT   = @SOEXT@

INSTALL  = @GAUCHE_INSTALL@

MODULE   = dbd_sqlite3

ARCHFILES = $(MODULE).$(DSOEXT)
SCMFILES  = dbd/sqlite3.scm
HEADERS   = 

TARGET    = $(ARCHFILES)
OBJS      = dbd_sqlite3.$(OBJEXT)         \
	        dbd_sqlite3lib.$(OBJEXT)
GENERATED = dbd_sqlite3lib.c $(MODULE)_head.c $(MODULE)_tail.c
CONFIG_GENERATED = Makefile config.cache config.log config.status \
		   configure.lineno autom4te*.cache gauche-dbd-sqlite3.gpd

sqlite3_SRCS = dbd_sqlite3.c dbd_sqlite3lib.stub

HEADER_INSTALL_DIR  = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)incdir`
SCM_INSTALL_DIR     = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)libdir`
ARCH_INSTALL_DIR    = $(DESTDIR)`$(GAUCHE_CONFIG) --$(INSTALL_TYPE)archdir`

all : $(TARGET)

$(MODULE).$(DSOEXT): $(sqlite3_SRCS)
	$(GAUCHE_PACKAGE) compile --verbose \
	  --libs="$(LIBS)" $(MODULE) $(sqlite3_SRCS)

check : all
	@rm -f test.log
	$(GOSH) -I. test.scm > test.log

install : all
	$(INSTALL) -m 444 -T $(HEADER_INSTALL_DIR) $(HEADERS)
	$(INSTALL) -m 444 -T $(SCM_INSTALL_DIR) $(SCMFILES) 
	$(INSTALL) -m 555 -T $(ARCH_INSTALL_DIR) $(ARCHFILES)
	$(INSTALL) -m 444 -T $(SCM_INSTALL_DIR)/.packages gauche-dbd-sqlite3.gpd

clean :
	rm -rf core $(TARGET) $(OBJS) $(GENERATED) *~ test.log so_locations

distclean : clean
	rm -rf $(CONFIG_GENERATED)

maintainer-clean : clean
	rm -rf $(CONFIG_GENERATED) configure

