"#include \"gauche_dbd_sqlite3.h\""

(define-symbol closed? "sym_closed")

(define-type <sqlite3-handle> "sqlite3 *" "sqlite3-handle"
  "SCM_SQLITE3_P" "SQLITE3_HANDLE_UNBOX" "SQLITE3_HANDLE_BOX")

(define-type <sqlite3-statement> "ScmSqlite3Stmt *" "sqlite3-statement-handle"
  "SCM_SQLITE3_STMT_P" "SQLITE3_STMT_HANDLE_UNBOX" "SQLITE3_STMT_HANDLE_BOX")

;; (define-cproc bind-sqlite-parameters (stmt::<sqlite3-statement> params::<list>)
;;   (expr <sqlite3-statement> "Sqlite3StmtBind(stmt, params)"))

(define-cproc make-sqlite-statement ()
  (expr <sqlite3-statement> "Sqlite3StmtMake()"))

(define-cproc sqlite3-close (db::<sqlite3-handle>)
  (expr <boolean> "Sqlite3DbClose(db_scm)"))

(define-cproc sqlite3-prepare (db::<sqlite3-handle> stmt::<sqlite3-statement> sql::<string>)
  (expr <boolean> "Sqlite3PrepareStmt(db_scm, stmt, sql)"))

(define-cproc sqlite3-open (arg::<string>)
  (expr <sqlite3-handle> "Sqlite3OpenDb(arg)"))

(define-cproc sqlite3-escape-string (value::<string>)
  (let*  ([tmp::char* (sqlite3_mprintf "%q" (Scm_GetStringConst value))]
		  [res::ScmObj (SCM_MAKE_STR_COPYING tmp)])

    (sqlite3_free tmp)
    (result res)))

(define-cproc sqlite3-errmsg (db::<sqlite3-handle>)
  (call <const-cstring> "sqlite3_errmsg"))

(define-cproc sqlite3-last-insert-rowid (db::<sqlite3-handle>)
  (call <ulong> "sqlite3_last_insert_rowid"))

(define-cproc sqlite3-statement-p (obj)
  (expr <boolean> "Sqlite3IsStmt(obj_scm)"))

(define-cproc sqlite3-closed-p (db::<sqlite3-handle>)
  (expr <boolean> "Sqlite3DbIsClosed(db_scm)"))

(define-cproc sqlite3-statement-end? (stmt::<sqlite3-statement>)
  (expr <boolean> "Sqlite3StmtIsEnd(stmt)"))

(define-cproc sqlite3-statement-step (stmt::<sqlite3-statement>)
  (call "Sqlite3StmtStep"))

(define-cproc sqlite3-statement-closed-p (stmt::<sqlite3-statement>)
  (expr <boolean> "Sqlite3StmtIsClosed(stmt)"))

(define-cproc sqlite3-statement-finish (stmt::<sqlite3-statement>)
  (expr <boolean> "Sqlite3StmtFinish(stmt)"))

(define-cproc sqlite3-statement-column-names (stmt::<sqlite3-statement>)
  (call "Sqlite3StmtColumnNames"))

